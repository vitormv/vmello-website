$background-color: #fefaf6;

$text-color: #656270;
$text-dark-color: #232320;
$text-color-hover: #ffffff;
$text-color-light: #bcbdbe;
$text-color-highlight: #e0a80d;

$color-primary: #ffc4ff;
$color-secondary: #aadcda;

$shade1: #2b2c2c;
$shade2: #2d2e2e;
$shade3: #292a2a;
$shade4: #282929;

$break-small: 640px;
$break-medium: 760px;
$break-large: 1024px;

$breakpoint-xs: 600px;
$breakpoint-sm: 760px;
$breakpoint-md: 1024px;
$breakpoint-lg: 1200px;

@function get-breakpoint-value($size) {
  @if $size == xs {
    @return $breakpoint-xs;
  } @else if $size == sm {
    @return $breakpoint-sm;
  } @else if $size == md {
    @return $breakpoint-md;
  } @else if $size == lg {
    @return $breakpoint-lg;
  } @else {
    @warn 'Breakpoint mixin supports: xs, sm, md, lg';
  }
}

@mixin breakpoint($from: 0, $until: 0) {
  // convert strings to numbers
  @if type-of($from) == string {
    $from: get-breakpoint-value($from);
  }

  @if type-of($until) == string {
    $until: get-breakpoint-value($until);
  }

  // the $until is always the actual breakpoint value minus 1
  $until-breakpoint: ($until - 1);

  $query: 'all' !default;

  @if $from != 0 and $until != 0 {
    $query: '(min-width: #{$from}) and (max-width: #{$until-breakpoint})';
  } @else if $from != 0 and $until == 0 {
    $query: '(min-width: #{$from})';
  } @else if $from == 0 and $until != 0 {
    $query: '(max-width: #{$until-breakpoint})';
  }

  @media #{$query} {
    @content;
  }
}
